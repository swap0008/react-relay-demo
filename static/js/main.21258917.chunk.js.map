{"version":3,"sources":["mutations/__generated__/DeleteStudentMutation.graphql.js","components/__generated__/Student_viewer.graphql.js","components/__generated__/Student_student.graphql.js","components/__generated__/Students_students.graphql.js","components/__generated__/AppAllStudentsQuery.graphql.js","mutations/__generated__/AddDetailMutation.graphql.js","components/__generated__/AddDetailQuery.graphql.js","mutations/__generated__/UpdateStudentMutation.graphql.js","components/__generated__/UpdateStudentQuery.graphql.js","Environment.js","mutations/DeleteStudentMutation.js","components/Student.js","components/Students.js","components/App.js","mutations/AddDetailMutation.js","components/AddDetail.js","mutations/UpdateStudentMutation.js","components/UpdateStudent.js","index.js"],"names":["node","v0","kind","name","type","defaultValue","v1","alias","storageKey","args","variableName","concreteType","plural","selections","fragment","metadata","argumentDefinitions","operation","params","operationKind","id","text","hash","module","exports","connection","count","cursor","direction","path","value","handle","key","filters","v2","v3","v4","environment","Environment","network","Network","create","variables","fetch","method","headers","Content-Type","body","JSON","stringify","query","then","response","json","store","Store","RecordSource","mutation","__webpack_require__","Student","_handleDelete","studentId","viewerId","input","clientMutationId","commitMutation","onError","err","console","error","updater","proxyStore","deletedId","getRootField","getValue","viewerProxy","get","ConnectionHandler","getConnection","deleteNode","DeleteStudentMutation","_this","props","student","viewer","this","react_default","a","createElement","rollNo","age","onClick","style","className","react_router_dom","to","concat","React","Component","createFragmentContainer","Students","students","allStudents","edges","map","_ref","components_Student","update","_handleUpdate","AppQuery","App","react_relay","render","components_Students","tempID","AddDetailMutation","callback","optimisticUpdate","newStudent","setValue","insertEdgeAfter","getLinkedRecord","onCompleted","log","AddDetail","state","_createStudent","_this$state","CreateStudentMutation","parseInt","history","replace","_this2","_this$state2","width","margin","placeholder","onChange","e","setState","target","marginLeft","withRouter","UpdateStudentMutation","optimisticUpdater","getId","newName","newAge","newRollNo","UpdateStudent","_updateStudent","match","_setDefaultValue","_ref2","backgroundColor","height","ReactDOM","react_router","exact","component","document","getElementById"],"mappings":"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","file":"static/js/main.21258917.chunk.js","sourcesContent":["/**\n * @flow\n * @relayHash 7dde89d34674d41e39aabddfa62d28da\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteRequest } from 'relay-runtime';\nexport type DeleteStudentInput = {|\n  id: string,\n  clientMutationId: string,\n|};\nexport type DeleteStudentMutationVariables = {|\n  input: DeleteStudentInput\n|};\nexport type DeleteStudentMutationResponse = {|\n  +deleteStudent: ?{|\n    +deletedId: ?string\n  |}\n|};\nexport type DeleteStudentMutation = {|\n  variables: DeleteStudentMutationVariables,\n  response: DeleteStudentMutationResponse,\n|};\n*/\n\n\n/*\nmutation DeleteStudentMutation(\n  $input: DeleteStudentInput!\n) {\n  deleteStudent(input: $input) {\n    deletedId\n  }\n}\n*/\n\nconst node/*: ConcreteRequest*/ = (function(){\nvar v0 = [\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"input\",\n    \"type\": \"DeleteStudentInput!\",\n    \"defaultValue\": null\n  }\n],\nv1 = [\n  {\n    \"kind\": \"LinkedField\",\n    \"alias\": null,\n    \"name\": \"deleteStudent\",\n    \"storageKey\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"input\",\n        \"variableName\": \"input\"\n      }\n    ],\n    \"concreteType\": \"DeleteStudentPayload\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"deletedId\",\n        \"args\": null,\n        \"storageKey\": null\n      }\n    ]\n  }\n];\nreturn {\n  \"kind\": \"Request\",\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"DeleteStudentMutation\",\n    \"type\": \"Mutation\",\n    \"metadata\": null,\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": (v1/*: any*/)\n  },\n  \"operation\": {\n    \"kind\": \"Operation\",\n    \"name\": \"DeleteStudentMutation\",\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"operationKind\": \"mutation\",\n    \"name\": \"DeleteStudentMutation\",\n    \"id\": null,\n    \"text\": \"mutation DeleteStudentMutation(\\n  $input: DeleteStudentInput!\\n) {\\n  deleteStudent(input: $input) {\\n    deletedId\\n  }\\n}\\n\",\n    \"metadata\": {}\n  }\n};\n})();\n// prettier-ignore\n(node/*: any*/).hash = 'd906bc2afa554dc2cde2676bf8fb98c6';\nmodule.exports = node;\n","/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ReaderFragment } from 'relay-runtime';\nimport type { FragmentReference } from \"relay-runtime\";\ndeclare export opaque type Student_viewer$ref: FragmentReference;\ndeclare export opaque type Student_viewer$fragmentType: Student_viewer$ref;\nexport type Student_viewer = {|\n  +id: string,\n  +$refType: Student_viewer$ref,\n|};\nexport type Student_viewer$data = Student_viewer;\nexport type Student_viewer$key = {\n  +$data?: Student_viewer$data,\n  +$fragmentRefs: Student_viewer$ref,\n};\n*/\n\n\nconst node/*: ReaderFragment*/ = {\n  \"kind\": \"Fragment\",\n  \"name\": \"Student_viewer\",\n  \"type\": \"Viewer\",\n  \"metadata\": null,\n  \"argumentDefinitions\": [],\n  \"selections\": [\n    {\n      \"kind\": \"ScalarField\",\n      \"alias\": null,\n      \"name\": \"id\",\n      \"args\": null,\n      \"storageKey\": null\n    }\n  ]\n};\n// prettier-ignore\n(node/*: any*/).hash = '7c68000c13cdd851bfc26058e7d6e8b9';\nmodule.exports = node;\n","/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ReaderFragment } from 'relay-runtime';\nimport type { FragmentReference } from \"relay-runtime\";\ndeclare export opaque type Student_student$ref: FragmentReference;\ndeclare export opaque type Student_student$fragmentType: Student_student$ref;\nexport type Student_student = {|\n  +id: string,\n  +rollNo: number,\n  +name: string,\n  +age: number,\n  +$refType: Student_student$ref,\n|};\nexport type Student_student$data = Student_student;\nexport type Student_student$key = {\n  +$data?: Student_student$data,\n  +$fragmentRefs: Student_student$ref,\n};\n*/\n\n\nconst node/*: ReaderFragment*/ = {\n  \"kind\": \"Fragment\",\n  \"name\": \"Student_student\",\n  \"type\": \"Student\",\n  \"metadata\": null,\n  \"argumentDefinitions\": [],\n  \"selections\": [\n    {\n      \"kind\": \"ScalarField\",\n      \"alias\": null,\n      \"name\": \"id\",\n      \"args\": null,\n      \"storageKey\": null\n    },\n    {\n      \"kind\": \"ScalarField\",\n      \"alias\": null,\n      \"name\": \"rollNo\",\n      \"args\": null,\n      \"storageKey\": null\n    },\n    {\n      \"kind\": \"ScalarField\",\n      \"alias\": null,\n      \"name\": \"name\",\n      \"args\": null,\n      \"storageKey\": null\n    },\n    {\n      \"kind\": \"ScalarField\",\n      \"alias\": null,\n      \"name\": \"age\",\n      \"args\": null,\n      \"storageKey\": null\n    }\n  ]\n};\n// prettier-ignore\n(node/*: any*/).hash = 'd513c58d3ca646bbb6772cc32addc29d';\nmodule.exports = node;\n","/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ReaderFragment } from 'relay-runtime';\ntype Student_student$ref = any;\ntype Student_viewer$ref = any;\nimport type { FragmentReference } from \"relay-runtime\";\ndeclare export opaque type Students_students$ref: FragmentReference;\ndeclare export opaque type Students_students$fragmentType: Students_students$ref;\nexport type Students_students = {|\n  +allStudents: {|\n    +edges: ?$ReadOnlyArray<?{|\n      +node: {|\n        +$fragmentRefs: Student_student$ref\n      |}\n    |}>\n  |},\n  +$fragmentRefs: Student_viewer$ref,\n  +$refType: Students_students$ref,\n|};\nexport type Students_students$data = Students_students;\nexport type Students_students$key = {\n  +$data?: Students_students$data,\n  +$fragmentRefs: Students_students$ref,\n};\n*/\n\n\nconst node/*: ReaderFragment*/ = {\n  \"kind\": \"Fragment\",\n  \"name\": \"Students_students\",\n  \"type\": \"Viewer\",\n  \"metadata\": {\n    \"connection\": [\n      {\n        \"count\": null,\n        \"cursor\": null,\n        \"direction\": \"backward\",\n        \"path\": [\n          \"allStudents\"\n        ]\n      }\n    ]\n  },\n  \"argumentDefinitions\": [],\n  \"selections\": [\n    {\n      \"kind\": \"LinkedField\",\n      \"alias\": \"allStudents\",\n      \"name\": \"__Students_allStudents_connection\",\n      \"storageKey\": null,\n      \"args\": null,\n      \"concreteType\": \"StudentConnection\",\n      \"plural\": false,\n      \"selections\": [\n        {\n          \"kind\": \"LinkedField\",\n          \"alias\": null,\n          \"name\": \"edges\",\n          \"storageKey\": null,\n          \"args\": null,\n          \"concreteType\": \"StudentEdge\",\n          \"plural\": true,\n          \"selections\": [\n            {\n              \"kind\": \"LinkedField\",\n              \"alias\": null,\n              \"name\": \"node\",\n              \"storageKey\": null,\n              \"args\": null,\n              \"concreteType\": \"Student\",\n              \"plural\": false,\n              \"selections\": [\n                {\n                  \"kind\": \"ScalarField\",\n                  \"alias\": null,\n                  \"name\": \"__typename\",\n                  \"args\": null,\n                  \"storageKey\": null\n                },\n                {\n                  \"kind\": \"FragmentSpread\",\n                  \"name\": \"Student_student\",\n                  \"args\": null\n                }\n              ]\n            },\n            {\n              \"kind\": \"ScalarField\",\n              \"alias\": null,\n              \"name\": \"cursor\",\n              \"args\": null,\n              \"storageKey\": null\n            }\n          ]\n        },\n        {\n          \"kind\": \"LinkedField\",\n          \"alias\": null,\n          \"name\": \"pageInfo\",\n          \"storageKey\": null,\n          \"args\": null,\n          \"concreteType\": \"PageInfo\",\n          \"plural\": false,\n          \"selections\": [\n            {\n              \"kind\": \"ScalarField\",\n              \"alias\": null,\n              \"name\": \"hasPreviousPage\",\n              \"args\": null,\n              \"storageKey\": null\n            },\n            {\n              \"kind\": \"ScalarField\",\n              \"alias\": null,\n              \"name\": \"startCursor\",\n              \"args\": null,\n              \"storageKey\": null\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"kind\": \"FragmentSpread\",\n      \"name\": \"Student_viewer\",\n      \"args\": null\n    }\n  ]\n};\n// prettier-ignore\n(node/*: any*/).hash = '75f3b3344ce1f2eb937f56fe44d9ddcb';\nmodule.exports = node;\n","/**\n * @flow\n * @relayHash bc7ed4528b4c8af3f97d14d9639fc704\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteRequest } from 'relay-runtime';\ntype Students_students$ref = any;\nexport type AppAllStudentsQueryVariables = {||};\nexport type AppAllStudentsQueryResponse = {|\n  +viewer: {|\n    +$fragmentRefs: Students_students$ref\n  |}\n|};\nexport type AppAllStudentsQuery = {|\n  variables: AppAllStudentsQueryVariables,\n  response: AppAllStudentsQueryResponse,\n|};\n*/\n\n\n/*\nquery AppAllStudentsQuery {\n  viewer {\n    ...Students_students\n    id\n  }\n}\n\nfragment Students_students on Viewer {\n  ...Student_viewer\n  allStudents(last: 100) {\n    edges {\n      node {\n        ...Student_student\n        id\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      hasPreviousPage\n      startCursor\n    }\n  }\n}\n\nfragment Student_viewer on Viewer {\n  id\n}\n\nfragment Student_student on Student {\n  id\n  rollNo\n  name\n  age\n}\n*/\n\nconst node/*: ConcreteRequest*/ = (function(){\nvar v0 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"id\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv1 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"last\",\n    \"value\": 100\n  }\n];\nreturn {\n  \"kind\": \"Request\",\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"AppAllStudentsQuery\",\n    \"type\": \"Query\",\n    \"metadata\": null,\n    \"argumentDefinitions\": [],\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"viewer\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": \"Viewer\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"Students_students\",\n            \"args\": null\n          }\n        ]\n      }\n    ]\n  },\n  \"operation\": {\n    \"kind\": \"Operation\",\n    \"name\": \"AppAllStudentsQuery\",\n    \"argumentDefinitions\": [],\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"viewer\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": \"Viewer\",\n        \"plural\": false,\n        \"selections\": [\n          (v0/*: any*/),\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"allStudents\",\n            \"storageKey\": \"allStudents(last:100)\",\n            \"args\": (v1/*: any*/),\n            \"concreteType\": \"StudentConnection\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"kind\": \"LinkedField\",\n                \"alias\": null,\n                \"name\": \"edges\",\n                \"storageKey\": null,\n                \"args\": null,\n                \"concreteType\": \"StudentEdge\",\n                \"plural\": true,\n                \"selections\": [\n                  {\n                    \"kind\": \"LinkedField\",\n                    \"alias\": null,\n                    \"name\": \"node\",\n                    \"storageKey\": null,\n                    \"args\": null,\n                    \"concreteType\": \"Student\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v0/*: any*/),\n                      {\n                        \"kind\": \"ScalarField\",\n                        \"alias\": null,\n                        \"name\": \"rollNo\",\n                        \"args\": null,\n                        \"storageKey\": null\n                      },\n                      {\n                        \"kind\": \"ScalarField\",\n                        \"alias\": null,\n                        \"name\": \"name\",\n                        \"args\": null,\n                        \"storageKey\": null\n                      },\n                      {\n                        \"kind\": \"ScalarField\",\n                        \"alias\": null,\n                        \"name\": \"age\",\n                        \"args\": null,\n                        \"storageKey\": null\n                      },\n                      {\n                        \"kind\": \"ScalarField\",\n                        \"alias\": null,\n                        \"name\": \"__typename\",\n                        \"args\": null,\n                        \"storageKey\": null\n                      }\n                    ]\n                  },\n                  {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"cursor\",\n                    \"args\": null,\n                    \"storageKey\": null\n                  }\n                ]\n              },\n              {\n                \"kind\": \"LinkedField\",\n                \"alias\": null,\n                \"name\": \"pageInfo\",\n                \"storageKey\": null,\n                \"args\": null,\n                \"concreteType\": \"PageInfo\",\n                \"plural\": false,\n                \"selections\": [\n                  {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"hasPreviousPage\",\n                    \"args\": null,\n                    \"storageKey\": null\n                  },\n                  {\n                    \"kind\": \"ScalarField\",\n                    \"alias\": null,\n                    \"name\": \"startCursor\",\n                    \"args\": null,\n                    \"storageKey\": null\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            \"kind\": \"LinkedHandle\",\n            \"alias\": null,\n            \"name\": \"allStudents\",\n            \"args\": (v1/*: any*/),\n            \"handle\": \"connection\",\n            \"key\": \"Students_allStudents\",\n            \"filters\": []\n          }\n        ]\n      }\n    ]\n  },\n  \"params\": {\n    \"operationKind\": \"query\",\n    \"name\": \"AppAllStudentsQuery\",\n    \"id\": null,\n    \"text\": \"query AppAllStudentsQuery {\\n  viewer {\\n    ...Students_students\\n    id\\n  }\\n}\\n\\nfragment Students_students on Viewer {\\n  ...Student_viewer\\n  allStudents(last: 100) {\\n    edges {\\n      node {\\n        ...Student_student\\n        id\\n        __typename\\n      }\\n      cursor\\n    }\\n    pageInfo {\\n      hasPreviousPage\\n      startCursor\\n    }\\n  }\\n}\\n\\nfragment Student_viewer on Viewer {\\n  id\\n}\\n\\nfragment Student_student on Student {\\n  id\\n  rollNo\\n  name\\n  age\\n}\\n\",\n    \"metadata\": {}\n  }\n};\n})();\n// prettier-ignore\n(node/*: any*/).hash = 'eebdf8ac370a58206c69e7d313e12dd2';\nmodule.exports = node;\n","/**\n * @flow\n * @relayHash 24c93ee2c40434c174867eae532996bd\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteRequest } from 'relay-runtime';\nexport type CreateStudentInput = {|\n  age: number,\n  name: string,\n  rollNo: number,\n  clientMutationId: string,\n|};\nexport type AddDetailMutationVariables = {|\n  input: CreateStudentInput\n|};\nexport type AddDetailMutationResponse = {|\n  +createStudent: ?{|\n    +student: ?{|\n      +rollNo: number,\n      +name: string,\n      +age: number,\n    |}\n  |}\n|};\nexport type AddDetailMutation = {|\n  variables: AddDetailMutationVariables,\n  response: AddDetailMutationResponse,\n|};\n*/\n\n\n/*\nmutation AddDetailMutation(\n  $input: CreateStudentInput!\n) {\n  createStudent(input: $input) {\n    student {\n      rollNo\n      name\n      age\n      id\n    }\n  }\n}\n*/\n\nconst node/*: ConcreteRequest*/ = (function(){\nvar v0 = [\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"input\",\n    \"type\": \"CreateStudentInput!\",\n    \"defaultValue\": null\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"input\",\n    \"variableName\": \"input\"\n  }\n],\nv2 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"rollNo\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv3 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"name\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv4 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"age\",\n  \"args\": null,\n  \"storageKey\": null\n};\nreturn {\n  \"kind\": \"Request\",\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"AddDetailMutation\",\n    \"type\": \"Mutation\",\n    \"metadata\": null,\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"createStudent\",\n        \"storageKey\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"CreateStudentPayload\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"student\",\n            \"storageKey\": null,\n            \"args\": null,\n            \"concreteType\": \"Student\",\n            \"plural\": false,\n            \"selections\": [\n              (v2/*: any*/),\n              (v3/*: any*/),\n              (v4/*: any*/)\n            ]\n          }\n        ]\n      }\n    ]\n  },\n  \"operation\": {\n    \"kind\": \"Operation\",\n    \"name\": \"AddDetailMutation\",\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"createStudent\",\n        \"storageKey\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"CreateStudentPayload\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"student\",\n            \"storageKey\": null,\n            \"args\": null,\n            \"concreteType\": \"Student\",\n            \"plural\": false,\n            \"selections\": [\n              (v2/*: any*/),\n              (v3/*: any*/),\n              (v4/*: any*/),\n              {\n                \"kind\": \"ScalarField\",\n                \"alias\": null,\n                \"name\": \"id\",\n                \"args\": null,\n                \"storageKey\": null\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  },\n  \"params\": {\n    \"operationKind\": \"mutation\",\n    \"name\": \"AddDetailMutation\",\n    \"id\": null,\n    \"text\": \"mutation AddDetailMutation(\\n  $input: CreateStudentInput!\\n) {\\n  createStudent(input: $input) {\\n    student {\\n      rollNo\\n      name\\n      age\\n      id\\n    }\\n  }\\n}\\n\",\n    \"metadata\": {}\n  }\n};\n})();\n// prettier-ignore\n(node/*: any*/).hash = 'f8d1146509650b619050b6c5a245089c';\nmodule.exports = node;\n","/**\n * @flow\n * @relayHash 48a1a8ae3c42d8918c19e7324c5803d1\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteRequest } from 'relay-runtime';\nexport type AddDetailQueryVariables = {||};\nexport type AddDetailQueryResponse = {|\n  +viewer: {|\n    +id: string\n  |}\n|};\nexport type AddDetailQuery = {|\n  variables: AddDetailQueryVariables,\n  response: AddDetailQueryResponse,\n|};\n*/\n\n\n/*\nquery AddDetailQuery {\n  viewer {\n    id\n  }\n}\n*/\n\nconst node/*: ConcreteRequest*/ = (function(){\nvar v0 = [\n  {\n    \"kind\": \"LinkedField\",\n    \"alias\": null,\n    \"name\": \"viewer\",\n    \"storageKey\": null,\n    \"args\": null,\n    \"concreteType\": \"Viewer\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"id\",\n        \"args\": null,\n        \"storageKey\": null\n      }\n    ]\n  }\n];\nreturn {\n  \"kind\": \"Request\",\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"AddDetailQuery\",\n    \"type\": \"Query\",\n    \"metadata\": null,\n    \"argumentDefinitions\": [],\n    \"selections\": (v0/*: any*/)\n  },\n  \"operation\": {\n    \"kind\": \"Operation\",\n    \"name\": \"AddDetailQuery\",\n    \"argumentDefinitions\": [],\n    \"selections\": (v0/*: any*/)\n  },\n  \"params\": {\n    \"operationKind\": \"query\",\n    \"name\": \"AddDetailQuery\",\n    \"id\": null,\n    \"text\": \"query AddDetailQuery {\\n  viewer {\\n    id\\n  }\\n}\\n\",\n    \"metadata\": {}\n  }\n};\n})();\n// prettier-ignore\n(node/*: any*/).hash = 'd51d39a6b110b834d1ff1f349d2a7626';\nmodule.exports = node;\n","/**\n * @flow\n * @relayHash c9fac99143c786f249fd7451dfa57bec\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteRequest } from 'relay-runtime';\nexport type UpdateStudentInput = {|\n  age?: ?number,\n  id: string,\n  name?: ?string,\n  rollNo?: ?number,\n  clientMutationId: string,\n|};\nexport type UpdateStudentMutationVariables = {|\n  input: UpdateStudentInput\n|};\nexport type UpdateStudentMutationResponse = {|\n  +updateStudent: ?{|\n    +student: ?{|\n      +id: string,\n      +name: string,\n      +age: number,\n      +rollNo: number,\n    |}\n  |}\n|};\nexport type UpdateStudentMutation = {|\n  variables: UpdateStudentMutationVariables,\n  response: UpdateStudentMutationResponse,\n|};\n*/\n\n\n/*\nmutation UpdateStudentMutation(\n  $input: UpdateStudentInput!\n) {\n  updateStudent(input: $input) {\n    student {\n      id\n      name\n      age\n      rollNo\n    }\n  }\n}\n*/\n\nconst node/*: ConcreteRequest*/ = (function(){\nvar v0 = [\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"input\",\n    \"type\": \"UpdateStudentInput!\",\n    \"defaultValue\": null\n  }\n],\nv1 = [\n  {\n    \"kind\": \"LinkedField\",\n    \"alias\": null,\n    \"name\": \"updateStudent\",\n    \"storageKey\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"input\",\n        \"variableName\": \"input\"\n      }\n    ],\n    \"concreteType\": \"UpdateStudentPayload\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"student\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": \"Student\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"id\",\n            \"args\": null,\n            \"storageKey\": null\n          },\n          {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"name\",\n            \"args\": null,\n            \"storageKey\": null\n          },\n          {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"age\",\n            \"args\": null,\n            \"storageKey\": null\n          },\n          {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"rollNo\",\n            \"args\": null,\n            \"storageKey\": null\n          }\n        ]\n      }\n    ]\n  }\n];\nreturn {\n  \"kind\": \"Request\",\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"UpdateStudentMutation\",\n    \"type\": \"Mutation\",\n    \"metadata\": null,\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": (v1/*: any*/)\n  },\n  \"operation\": {\n    \"kind\": \"Operation\",\n    \"name\": \"UpdateStudentMutation\",\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"operationKind\": \"mutation\",\n    \"name\": \"UpdateStudentMutation\",\n    \"id\": null,\n    \"text\": \"mutation UpdateStudentMutation(\\n  $input: UpdateStudentInput!\\n) {\\n  updateStudent(input: $input) {\\n    student {\\n      id\\n      name\\n      age\\n      rollNo\\n    }\\n  }\\n}\\n\",\n    \"metadata\": {}\n  }\n};\n})();\n// prettier-ignore\n(node/*: any*/).hash = 'acf7150b01e6013ea0cc69be6e2e5e95';\nmodule.exports = node;\n","/**\n * @flow\n * @relayHash b0bf9fa9c71d5aa8bb1e049a204337ce\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteRequest } from 'relay-runtime';\nexport type UpdateStudentQueryVariables = {|\n  id: string\n|};\nexport type UpdateStudentQueryResponse = {|\n  +viewer: {|\n    +Student: ?{|\n      +id: string,\n      +name: string,\n      +age: number,\n      +rollNo: number,\n    |}\n  |}\n|};\nexport type UpdateStudentQuery = {|\n  variables: UpdateStudentQueryVariables,\n  response: UpdateStudentQueryResponse,\n|};\n*/\n\n\n/*\nquery UpdateStudentQuery(\n  $id: ID!\n) {\n  viewer {\n    Student(id: $id) {\n      id\n      name\n      age\n      rollNo\n    }\n    id\n  }\n}\n*/\n\nconst node/*: ConcreteRequest*/ = (function(){\nvar v0 = [\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"id\",\n    \"type\": \"ID!\",\n    \"defaultValue\": null\n  }\n],\nv1 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"id\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv2 = {\n  \"kind\": \"LinkedField\",\n  \"alias\": null,\n  \"name\": \"Student\",\n  \"storageKey\": null,\n  \"args\": [\n    {\n      \"kind\": \"Variable\",\n      \"name\": \"id\",\n      \"variableName\": \"id\"\n    }\n  ],\n  \"concreteType\": \"Student\",\n  \"plural\": false,\n  \"selections\": [\n    (v1/*: any*/),\n    {\n      \"kind\": \"ScalarField\",\n      \"alias\": null,\n      \"name\": \"name\",\n      \"args\": null,\n      \"storageKey\": null\n    },\n    {\n      \"kind\": \"ScalarField\",\n      \"alias\": null,\n      \"name\": \"age\",\n      \"args\": null,\n      \"storageKey\": null\n    },\n    {\n      \"kind\": \"ScalarField\",\n      \"alias\": null,\n      \"name\": \"rollNo\",\n      \"args\": null,\n      \"storageKey\": null\n    }\n  ]\n};\nreturn {\n  \"kind\": \"Request\",\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"UpdateStudentQuery\",\n    \"type\": \"Query\",\n    \"metadata\": null,\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"viewer\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": \"Viewer\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/)\n        ]\n      }\n    ]\n  },\n  \"operation\": {\n    \"kind\": \"Operation\",\n    \"name\": \"UpdateStudentQuery\",\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"viewer\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": \"Viewer\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v1/*: any*/)\n        ]\n      }\n    ]\n  },\n  \"params\": {\n    \"operationKind\": \"query\",\n    \"name\": \"UpdateStudentQuery\",\n    \"id\": null,\n    \"text\": \"query UpdateStudentQuery(\\n  $id: ID!\\n) {\\n  viewer {\\n    Student(id: $id) {\\n      id\\n      name\\n      age\\n      rollNo\\n    }\\n    id\\n  }\\n}\\n\",\n    \"metadata\": {}\n  }\n};\n})();\n// prettier-ignore\n(node/*: any*/).hash = 'abd8903d95a87af768338128df9b28ca';\nmodule.exports = node;\n","import {\r\n    Environment,\r\n    Network,\r\n    RecordSource,\r\n    Store,\r\n  } from 'relay-runtime';\r\n  \r\n  function fetchQuery(\r\n    operation,\r\n    variables,\r\n  ) {\r\n    return fetch('https://api.graph.cool/relay/v1/cjx4c78gt50270134wtlydpy7', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        query: operation.text,\r\n        variables,\r\n      }),\r\n    }).then(response => {\r\n      return response.json();\r\n    });\r\n  }\r\n  \r\n  const environment = new Environment({\r\n    network: Network.create(fetchQuery),\r\n    store: new Store(new RecordSource()),  \r\n  });\r\n  \r\n  export default environment;","import {\r\n    commitMutation,\r\n    graphql,\r\n  } from 'react-relay'\r\n  import {ConnectionHandler} from 'relay-runtime'\r\n  import environment from '../Environment'\r\n  \r\n  const mutation = graphql`\r\n    mutation DeleteStudentMutation($input: DeleteStudentInput!) {\r\n      deleteStudent(input: $input) {\r\n        deletedId\r\n      }\r\n    }\r\n  `;\r\n  \r\n  export default function DeleteStudentMutation(studentId, viewerId) {\r\n    const variables = {\r\n      input: {\r\n        id: studentId,\r\n        clientMutationId: \"\"\r\n      },\r\n    }\r\n    commitMutation(\r\n      environment,\r\n      {\r\n        mutation,\r\n        variables,\r\n        onError: err => console.error(err),\r\n        updater: (proxyStore) => {\r\n          const deleteStudentField = proxyStore.getRootField('deleteStudent')\r\n          const deletedId = deleteStudentField.getValue('deletedId')\r\n          const viewerProxy = proxyStore.get(viewerId)\r\n          const connection = ConnectionHandler.getConnection(viewerProxy, 'Students_allStudents')\r\n          ConnectionHandler.deleteNode(connection, deletedId)\r\n        }\r\n      },\r\n    )\r\n}","import React from 'react';\r\nimport DeleteStudentMutation from '../mutations/DeleteStudentMutation';\r\nimport { createFragmentContainer, graphql } from 'react-relay';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Student extends React.Component {\r\n    _handleDelete = () => {\r\n        DeleteStudentMutation(this.props.student.id, this.props.viewer.id);\r\n    }\r\n\r\n    render() {\r\n        const { student } = this.props;\r\n\r\n        return (\r\n            <tr key={student.id}>\r\n                <td>{student.rollNo}</td>\r\n                <td>{student.name}</td>\r\n                <td>{student.age}</td>\r\n                <td \r\n                    onClick={this._handleDelete} \r\n                    style={{cursor: \"pointer\"}}>\r\n                        <i className=\"material-icons\">delete</i>\r\n                </td>\r\n                <td>\r\n                    <Link to={`/update/${student.id}`}>\r\n                        <i className=\"material-icons\">system_update_alt</i>\r\n                    </Link>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default createFragmentContainer(Student, {\r\n    viewer: graphql`fragment Student_viewer on Viewer {\r\n        id\r\n    }`,\r\n    student: graphql`fragment Student_student on Student {\r\n        id\r\n        rollNo\r\n        name\r\n        age\r\n    }`\r\n});","import React from 'react';\r\nimport { createFragmentContainer, graphql } from 'react-relay';\r\nimport { Link } from 'react-router-dom';\r\nimport Student from './Student';\r\n\r\nclass Students extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"navbar\">\r\n                    {/* <input \r\n                        type=\"text\" \r\n                        placeholder=\"Search by ID...\"\r\n                    /> */}\r\n                    <h1>Student Details</h1>\r\n                    <Link to=\"/add\">\r\n                        <h5>Add Student +</h5>\r\n                    </Link>\r\n                </div>\r\n                <table className=\"centered striped\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Name</th>\r\n                            <th>Age</th>\r\n                            <th>Delete</th>\r\n                            <th>Update</th>\r\n                        </tr>\r\n                        {this.props.students.allStudents.edges.map(({node}) => (\r\n                            <Student student={node} viewer={this.props.students} update={this._handleUpdate} />\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default createFragmentContainer(Students, {\r\n    students: graphql`fragment Students_students on Viewer {\r\n        ...Student_viewer\r\n        allStudents(last: 100) @connection(key: \"Students_allStudents\", filters: []) {\r\n            edges {\r\n                node {\r\n                    ...Student_student\r\n                }\r\n            }\r\n        }\r\n    }`\r\n});","import React from 'react';\nimport {graphql, QueryRenderer} from 'react-relay';\nimport Students from './Students';\n\nimport environment from '../Environment';\n\nconst AppQuery = graphql`\n  query AppAllStudentsQuery {\n    viewer {\n      ...Students_students\n    }\n  }\n`;\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <QueryRenderer\n        environment={environment}\n        query={AppQuery}\n        render={({error, props}) => {\n          if (error) {\n            return <div>Error!</div>;\n          }\n          if (!props) {\n            return <div>Loading...</div>;\n          }\n          return <Students students={props.viewer}/>;\n        }}\n      />\n    );\n  }\n}","import {\r\n    commitMutation,\r\n    graphql\r\n} from 'react-relay';\r\nimport { ConnectionHandler } from 'relay-runtime';\r\nimport environment from '../Environment';\r\n\r\nconst mutation = graphql`\r\n    mutation AddDetailMutation($input: CreateStudentInput!) {\r\n        createStudent(input: $input) {\r\n            student {\r\n                rollNo\r\n                name\r\n                age\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nlet tempID = 0;\r\n\r\nexport default (id, rollNo, name, age, callback) => {\r\n    const variables = {\r\n        input : {\r\n            rollNo,\r\n            name,\r\n            age,\r\n            clientMutationId: \"\"\r\n        }\r\n    };\r\n\r\n    commitMutation(\r\n        environment,\r\n        {\r\n            mutation,\r\n            variables,\r\n            optimisticUpdate: (store) => {\r\n                //Creating a new student as a mock\r\n                const id = 'client:newStudent:' + tempID++;\r\n                const newStudent = store.create(id, 'Detail');\r\n                newStudent.setValue(id, 'id');\r\n                newStudent.setValue(name, 'name');        \r\n                newStudent.setValue(age, 'age');\r\n                newStudent.setValue(rollNo, 'rollNo');\r\n                \r\n                //Updating the store with the mock data\r\n                const student = store.get(id);\r\n                const connection = ConnectionHandler.getConnection(student, 'Students_allStudents');\r\n                if (connection) {\r\n                    ConnectionHandler.insertEdgeAfter(connection, newStudent);\r\n                }\r\n            },\r\n            updater: (store) => {\r\n                // Retrieve new post from the server\r\n                const createStudentField = store.getRootField('createStudent');\r\n                const newStudent = createStudentField.getLinkedRecord('student');\r\n\r\n\r\n                //Updating the store with the server responsed data\r\n                const student = store.get(id);\r\n                const connection = ConnectionHandler.getConnection(student, 'Students_allStudents');\r\n                if (connection) {\r\n                    ConnectionHandler.insertEdgeAfter(connection, newStudent);\r\n                }\r\n            },\r\n            onCompleted: callback,\r\n            onError: (err) => console.log(err)\r\n        }\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport { QueryRenderer, graphql } from 'react-relay';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport CreateStudentMutation from '../mutations/AddDetailMutation';\r\nimport environment from '../Environment';\r\n\r\nconst query = graphql`\r\n    query AddDetailQuery {\r\n        viewer {\r\n            id\r\n        }\r\n    }\r\n`;\r\n\r\nclass AddDetail extends Component {\r\n    state = {\r\n        rollNo: '',\r\n        name: '',\r\n        age: ''\r\n    }\r\n\r\n    _createStudent = (id) => {\r\n        const { rollNo, name, age } = this.state;\r\n        CreateStudentMutation(id, parseInt(rollNo), name, parseInt(age), () => this.props.history.replace('/'));\r\n    }\r\n\r\n    render() {\r\n        const { rollNo, name, age } = this.state;\r\n\r\n        return (\r\n            <QueryRenderer\r\n                environment={environment}\r\n                query={query}\r\n                render={({error, props}) => {\r\n                if (error) {\r\n                    return <div>Error!</div>;\r\n                }\r\n                if (!props) {\r\n                    return <div>Loading...</div>;\r\n                }\r\n                return (\r\n                    <div style={{width:\"500px\", margin: 'auto'}}>\r\n                        <h1>Add Student</h1>\r\n                        <input \r\n                            type=\"text\" \r\n                            placeholder=\"rollNo\" \r\n                            value={rollNo} \r\n                            onChange={(e) => this.setState({rollNo: e.target.value})}/>\r\n                        <input \r\n                            type=\"text\" \r\n                            placeholder=\"name\"\r\n                            value={name}\r\n                            onChange={(e) => this.setState({name: e.target.value})}/>\r\n                        <input \r\n                            type=\"text\" \r\n                            placeholder=\"age\"\r\n                            value={age}\r\n                            onChange={(e) => this.setState({age: e.target.value})}/>\r\n                        <button \r\n                            className=\"btn waves-effect waves-light\" \r\n                            type=\"submit\" \r\n                            name=\"action\"\r\n                            onClick={() => this._createStudent(props.viewer.id)}>Submit\r\n                            <i className=\"material-icons right\">send</i>\r\n                        </button>\r\n                        <Link to=\"/\">\r\n                            <button className=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\" style={{marginLeft: \"10px\"}}>\r\n                                Go Back\r\n                                <i className=\"material-icons right\">arrow_back</i>\r\n                            </button>\r\n                        </Link>\r\n                    </div>\r\n                    );\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(AddDetail);","import {\r\n    commitMutation,\r\n    graphql\r\n  } from 'react-relay';\r\nimport environment from '../Environment';\r\n  \r\nconst mutation = graphql`\r\n    mutation UpdateStudentMutation($input: UpdateStudentInput!) {\r\n        updateStudent(input: $input) {\r\n            student {\r\n                id\r\n                name\r\n                age\r\n                rollNo\r\n            }\r\n        }\r\n    }\r\n`;\r\n  \r\n  export default (id, name, rollNo, age, callback) => {\r\n    const variables = {\r\n      input: {\r\n        id,\r\n        name,\r\n        age,\r\n        rollNo,\r\n        clientMutationId: \"\"\r\n      },\r\n    }\r\n  \r\n    commitMutation(\r\n      environment,\r\n      {\r\n        mutation,\r\n        variables,\r\n        optimisticUpdater: proxyStore => {\r\n            const getId = proxyStore.get(id);\r\n            //const newStudent = getId.getLinkedRecord('student');\r\n            getId.setValue(name, 'name');\r\n            getId.setValue(age, 'age');\r\n            getId.setValue(rollNo, 'rollNo');\r\n        },\r\n        updater: proxyStore => {\r\n            const updateStudentField = proxyStore.getRootField('updateStudent')\r\n            const newStudent = updateStudentField.getLinkedRecord('student')\r\n        \r\n            const newName = newStudent.getValue('name');\r\n            const newAge = newStudent.getValue('age');\r\n            const newRollNo = newStudent.getValue('rollNo');\r\n          \r\n            newStudent.setValue(newName, 'name');\r\n            newStudent.setValue(newAge, 'age');\r\n            newStudent.setValue(newRollNo, 'rollNo');\r\n        },\r\n        onCompleted: () => callback(),\r\n        onError: err => console.error(err),\r\n      },\r\n    )\r\n  }","import React, { Component } from 'react';\r\nimport {graphql, QueryRenderer} from 'react-relay';\r\nimport { withRouter } from 'react-router-dom';\r\nimport environment from '../Environment';\r\nimport UpdateStudentMutation from '../mutations/UpdateStudentMutation';\r\n\r\nconst query = graphql`\r\n    query UpdateStudentQuery($id: ID!) {\r\n        viewer {\r\n            Student(id: $id) {\r\n                id\r\n                name\r\n                age\r\n                rollNo\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nclass UpdateStudent extends Component {\r\n    state = {\r\n        id: '',\r\n        rollNo: '',\r\n        name: '',\r\n        age: ''\r\n    }\r\n\r\n    _updateStudent = () => {\r\n        const { rollNo, name, age } = this.state;\r\n        UpdateStudentMutation(this.props.match.params.id, name, parseInt(rollNo), parseInt(age), () => this.props.history.replace('/'));\r\n    }\r\n\r\n    _setDefaultValue = ({id, rollNo, age, name}) => {\r\n        this.setState({\r\n            id,\r\n            rollNo,\r\n            age,\r\n            name\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { rollNo, name, age } = this.state;\r\n\r\n        return (\r\n            <QueryRenderer\r\n                environment={environment}\r\n                query={query}\r\n                variables={{\r\n                    id: this.props.match.params.id\r\n                }}\r\n                render={({error, props}) => {\r\n                if (error) {\r\n                    return <div>Error!</div>;\r\n                }\r\n                if (!props) {\r\n                    return <div>Loading...</div>;\r\n                }\r\n                return (\r\n                    <div style={{backgroundColor: \"rgba(0,0,0,0.5)\", height: '100vh'}}>\r\n                        <div className=\"modal-content\">\r\n                            <span className=\"close\" onClick={() => this.props.history.replace('/')}>&times;</span>\r\n                            <div style={{width:\"500px\", margin: 'auto'}}>\r\n                                <h1>Update Student</h1>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    placeholder=\"rollNo\" \r\n                                    value={rollNo} \r\n                                    onChange={(e) => this.setState({rollNo: e.target.value})}/>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    placeholder=\"name\"\r\n                                    value={name}\r\n                                    onChange={(e) => this.setState({name: e.target.value})}/>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    placeholder=\"age\"\r\n                                    value={age}\r\n                                    onChange={(e) => this.setState({age: e.target.value})}/>\r\n                                <button \r\n                                    className=\"btn waves-effect waves-light\" \r\n                                    type=\"submit\" \r\n                                    name=\"action\"\r\n                                    onClick={this._updateStudent}>Update\r\n                                    <i className=\"material-icons right\">send</i>\r\n                                </button>\r\n                                <button \r\n                                    style={{marginLeft: '20px'}}\r\n                                    className=\"btn waves-effect waves-light\" \r\n                                    type=\"submit\" \r\n                                    name=\"action\"\r\n                                    onClick={() => this._setDefaultValue(props.viewer.Student)}>Default Value\r\n                                    <i className=\"material-icons right\">assignment_return</i>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(UpdateStudent);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\nimport App from './components/App';\nimport AddDetail from './components/AddDetail';\nimport UpdateStudent from './components/UpdateStudent';\nimport './index.css';\n\nReactDOM.render(\n    <Router>\n        <Route exact path=\"/\" component={App} />\n        <Route path=\"/add\" component={AddDetail} />\n        <Route path=\"/update/:id\" component={UpdateStudent} />\n    </Router>, \n    document.getElementById('root')\n);"],"sourceRoot":""}